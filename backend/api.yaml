swagger: '2.0'
info:
  title: DSA Competition Game API
  description: This is official documentation of dsa Competition game
  version: 1.0
  contact:
    email: unicodeDsaGame@gmail.com
    servers:
      -url: 'http://localhost:5000'
      description: "This is the local server to work upon"
      -url: "http://pending"
      description: "This is the officially hosted site"

schemes: [http]

paths:
  # Send Otp for verification
  /api/user/register:
    post:
      summary:  Sending Otp for contact verication
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              contact: 
                type: string
                default: "xxxxxxxxxx"
      responses: 
       200:
        description: Success,Otp sent successfully to contact No
       400:
        description: Unable to send otp,error occured

  # Otp verification and saving User
  /api/user/verifyOtp/{name}/{email}/{password}/{contact}:
    post:
      summary:  Verifying Otp and saving User
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
      - name: code
        in: body
        required: true
        schema:
            type: object
            properties:
              code: 
                type: string
                default: "xxxxxx"
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: email
        in: path
        required: true
        schema:
          type: email
      - name: password
        in: path
        required: true
        schema:
          type: string
      - name: contact
        in: path
        required: true
        schema:
          type: number
      responses: 
       200:
        description: Success, Otp verified nd user saved
       400:
        description: Some error Occured

  # Logging in User
  /api/user/login:
    post:
      summary:  Sending Otp for contact verication if Account exists
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              email: 
                type: email
                default: "abc@gmail.com"
              contact: 
                type: string
                default: "myPassword"              
      responses: 
       200:
        description: Success,Otp sent successfully to registered contact No
       400:
        description: Unable to send otp,error occured

# Verifying Otp for Login
  /api/user/verifyLoginOtp/{email}:
    post:
      summary:  Verifying Otp and Logging in User
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
      - name: code
        in: body
        required: true
        schema:
            type: object
            properties:
              code: 
                type: string
                default: "xxxxxx"
      - name: email
        in: path
        required: true
        schema:
          type: email
      responses: 
       200:
        description: Success, Otp verified and user logged in
       400:
        description: Some error Occured

  # Forgot Password
  /api/user/forgot-password:
    post:
      summary:  To send an email reset Link via Email
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              email: 
                type: email
                default: "abc@gmail.com"              
      responses: 
       200:
        description: Successfully sent reset link to registered email id if exists
       400:
        description: Unable to send email ,error occured
       404:
        description: User Not found

# Reset Password
  /api/user/reset-password/{_id}/{newToken}:
    post:
      summary:  To send an email reset Link via Email
      produces: 
        - application/json
      consumes: 
        - application/json
      parameters:
      - name: _id
        in: path
        required: true
        schema:
          type: string
      - name: newToken
        in: path
        required: true
        schema:
          type: string
      - in: body
        name: user
        schema:
          type: object
          properties:
            password: 
              type: string
              default: ""  
            confirmPassword: 
              type: string
              default: ""              
      responses: 
       200:
        description: Successfully updated Password
       400:
        description: Some error occurred in resetting Password
       404:
        description: User Not found